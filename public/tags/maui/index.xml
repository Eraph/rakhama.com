<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>maui on Garcia&#39;s Guide to the Galaxy</title>
    <link>https://rakhama.com/tags/maui/</link>
    <description>Recent content in maui on Garcia&#39;s Guide to the Galaxy</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 09 Nov 2023 14:20:14 +1000</lastBuildDate><atom:link href="https://rakhama.com/tags/maui/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Run a Blazor Web Application as Maui Mobile App</title>
      <link>https://rakhama.com/posts/run-blazor-web-application-as-maui-mobile-app/</link>
      <pubDate>Thu, 09 Nov 2023 14:20:14 +1000</pubDate>
      
      <guid>https://rakhama.com/posts/run-blazor-web-application-as-maui-mobile-app/</guid>
      <description>&lt;p&gt;I took some time to investigate developing a MAUI mobile app that shares business logic with a Blazor web app by way of ViewModels and the like. What I discovered was that MAUI and XAML is a pretty cumbersome framework. My colleague Kael &lt;a href=&#34;https://www.kaels-kabbage.com/posts/cross-platform-options-a-very-shallow-exploration/#maui-blazor-hybrid&#34;&gt;gave me some insight&lt;/a&gt; on the possibility of building a Blazor app and running that as a MAUI app. After looking into it in more detail I came to the conclusion that having a single application with multiple deployment targets is a more practical approach to cross-platform development. This article serves as a guide to developing a single application that can be deployed as both a website and an Android app. Of course there are a few platform specific things to look out for but they&amp;rsquo;re easily handled as I will demonstrate in this post.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
